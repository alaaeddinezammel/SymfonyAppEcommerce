<?php

namespace Pidev\AllForDealBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * EvaluationProdRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EvaluationProdRepository extends EntityRepository
{
    
         public function moyenne($offre) {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $query = $qb->select("avg(o.rating)")
                        ->from("PidevAllForDealBundle:EvaluationProd", "o")
                        ->andWhere("o.idProduit=:idOffre")->setParameter('idOffre', $offre);

        return $query->getQuery()->getSingleScalarResult();
    }

    public function moyenneAgent($compte) {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $query = $qb->select("avg(o.rating)")
                        ->from("PidevAllForDealBundle:EvaluationProd", "o")
                        ->andWhere("o.idMembre=:idAgent")->setParameter('idAgent', $compte);

        return $query->getQuery()->getSingleScalarResult();
    }
     public function delete_Al($id) {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $query = $qb->delete("o")
                        ->from("PidevAllForDealBundle:EvaluationProd", "o")
                        ->andWhere("o.idProduit=:idAgent")->setParameter('idAgent', $id);

        return $query->getQuery()->getSingleScalarResult();
    }
       public function countProduitEv($id,$id1)
           {
        $qb = $this->createQueryBuilder('u')
                ->select('count(u.idMembre)')
                ->where('u.idMembre = :id')
                ->andWhere("u.idProduit=:id1")
                ->setParameter('id', $id)
                 ->setParameter('id1', $id1);
        return $qb->getQuery()->getSingleScalarResult();
    }
}
